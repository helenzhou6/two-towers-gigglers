FROM python:3.10.13-slim-bookworm AS base

FROM base AS builder

# Copy uv binary from prebuilt image
COPY --from=ghcr.io/astral-sh/uv:0.4.9 /uv /bin/uv

# Set environment for uv
ENV UV_COMPILE_BYTECODE=1 UV_LINK_MODE=copy

# Install build tools with C++17 support
RUN apt-get update && \
    apt-get install -y build-essential g++ && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy lock and pyproject files first to leverage Docker layer caching
COPY uv.lock pyproject.toml /app/

# Sync dependencies without dev or project
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-install-project --no-dev

# Copy the rest of the app
COPY . /app

# Install remaining dependencies if any
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-dev

FROM base

# Copy the fully installed app from builder
COPY --from=builder /app /app

# Ensure virtual environment is available in PATH
ENV PATH="/app/.venv/bin:$PATH"

WORKDIR /app
ENV PYTHONPATH="./src"

# Expose API port
EXPOSE 8000

RUN chmod +x ./scripts/api-entrypoint.sh

# (d) Use the script as the containerâ€™s entrypoint
ENTRYPOINT ["./scripts/api-entrypoint.sh"] 
CMD []
